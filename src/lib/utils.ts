import { clsx, type ClassValue } from "clsx"
import { twMerge } from "tailwind-merge"
import dayjs from "dayjs"
import relativeTime from "dayjs/plugin/relativeTime"
import "dayjs/locale/ko"

dayjs.extend(relativeTime)
dayjs.locale('ko')

export function cn(...inputs: ClassValue[]) {
  return twMerge(clsx(inputs))
}

export function formatDate(date: string | Date) {
  return dayjs(date).fromNow()
}

export function formatFullDate(date: string | Date) {
  return dayjs(date).format('YYYYÎÖÑ MMÏõî DDÏùº HH:mm')
}

export function truncateText(text: string, length: number = 100) {
  if (text.length <= length) return text
  return text.slice(0, length) + '...'
}

export function getCategoryLabel(category: string) {
  switch (category) {
    case 'job_offer':
      return 'Íµ¨Ïù∏'
    case 'job_seek':
      return 'Íµ¨ÏßÅ'
    case 'community':
      return 'Ïª§ÎÆ§ÎãàÌã∞'
    case 'pregnancy_info':
      return 'ÏûÑÏã† Ï†ïÎ≥¥'
    case 'parenting_guide':
      return 'Ïú°ÏïÑ Í∞ÄÏù¥Îìú'
    case 'health_tips':
      return 'Í±¥Í∞ï Ï†ïÎ≥¥'
    case 'nutrition_guide':
      return 'ÏòÅÏñë Í∞ÄÏù¥Îìú'
    case 'development_info':
      return 'Î∞úÎã¨ Ï†ïÎ≥¥'
    case 'safety_tips':
      return 'ÏïàÏ†Ñ ÏàòÏπô'
    default:
      return category
  }
}

export function getCategoryColor(category: string) {
  switch (category) {
    case 'job_offer':
      return 'bg-blue-100 text-blue-800'
    case 'job_seek':
      return 'bg-green-100 text-green-800'
    case 'community':
      return 'bg-purple-100 text-purple-800'
    case 'pregnancy_info':
      return 'bg-pink-100 text-pink-800'
    case 'parenting_guide':
      return 'bg-blue-100 text-blue-800'
    case 'health_tips':
      return 'bg-green-100 text-green-800'
    case 'nutrition_guide':
      return 'bg-orange-100 text-orange-800'
    case 'development_info':
      return 'bg-purple-100 text-purple-800'
    case 'safety_tips':
      return 'bg-red-100 text-red-800'
    default:
      return 'bg-gray-100 text-gray-800'
  }
}

// Educational content helper functions
export function isEducationalContent(category: string): boolean {
  return ['pregnancy_info', 'parenting_guide', 'health_tips', 'nutrition_guide', 'development_info', 'safety_tips'].includes(category)
}

export function getCategoryIcon(category: string): string {
  switch (category) {
    case 'pregnancy_info':
      return 'ü§±'
    case 'parenting_guide':
      return 'üë∂'
    case 'health_tips':
      return 'üè•'
    case 'nutrition_guide':
      return 'ü•ó'
    case 'development_info':
      return 'üéØ'
    case 'safety_tips':
      return 'üõ°Ô∏è'
    default:
      return 'üìù'
  }
}

export function formatReadTime(minutes: number): string {
  return `${minutes}Î∂Ñ ÏùΩÍ∏∞`
}

export function getTargetAudienceLabel(audience: string): string {
  switch (audience) {
    case 'expecting_parents':
      return 'ÏòàÎπÑ Î∂ÄÎ™®'
    case 'new_parents':
      return 'Ïã†ÏÉùÏïÑ Î∂ÄÎ™®'
    case 'toddler_parents':
      return 'Ïú†ÏïÑ Î∂ÄÎ™®'
    case 'all_parents':
      return 'Î™®Îì† Î∂ÄÎ™®'
    default:
      return audience
  }
}