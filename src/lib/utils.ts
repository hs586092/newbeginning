import { clsx, type ClassValue } from "clsx"
import { twMerge } from "tailwind-merge"
import dayjs from "dayjs"
import relativeTime from "dayjs/plugin/relativeTime"
import "dayjs/locale/ko"

dayjs.extend(relativeTime)
dayjs.locale('ko')

export function cn(...inputs: ClassValue[]) {
  return twMerge(clsx(inputs))
}

export function formatDate(date: string | Date) {
  return dayjs(date).fromNow()
}

export function formatFullDate(date: string | Date) {
  return dayjs(date).format('YYYYÎÖÑ MMÏõî DDÏùº HH:mm')
}

export function truncateText(text: string, length: number = 100) {
  if (text.length <= length) return text
  return text.slice(0, length) + '...'
}

export function getCategoryLabel(category: string) {
  switch (category) {
    case 'community':
      return 'Ïª§ÎÆ§ÎãàÌã∞'
    case 'expecting':
      return 'ÏòàÎπÑÎßò'
    case 'newborn':
      return 'Ïã†ÏÉùÏïÑÎßò'
    case 'toddler':
      return 'ÏÑ±Ïû•Í∏∞Îßò'
    case 'expert':
      return 'ÏÑ†Î∞∞Îßò'
    default:
      return category
  }
}

export function getCategoryColor(category: string) {
  switch (category) {
    case 'community':
      return 'bg-purple-100 text-purple-800'
    case 'expecting':
      return 'bg-pink-100 text-pink-800'
    case 'newborn':
      return 'bg-blue-100 text-blue-800'
    case 'toddler':
      return 'bg-green-100 text-green-800'
    case 'expert':
      return 'bg-orange-100 text-orange-800'
    default:
      return 'bg-gray-100 text-gray-800'
  }
}

// Educational content helper functions
export function isEducationalContent(category: string): boolean {
  return ['expecting', 'newborn', 'toddler', 'expert'].includes(category)
}

export function getCategoryIcon(category: string): string {
  switch (category) {
    case 'expecting':
      return 'ü§∞'
    case 'newborn':
      return 'üë∂'
    case 'toddler':
      return 'üßí'
    case 'expert':
      return 'üë©‚Äçüëß‚Äçüë¶'
    case 'community':
      return 'üí¨'
    default:
      return 'üìù'
  }
}

export function formatReadTime(minutes: number): string {
  return `${minutes}Î∂Ñ ÏùΩÍ∏∞`
}

export function getTargetAudienceLabel(audience: string): string {
  switch (audience) {
    case 'expecting_parents':
      return 'ÏòàÎπÑ Î∂ÄÎ™®'
    case 'new_parents':
      return 'Ïã†ÏÉùÏïÑ Î∂ÄÎ™®'
    case 'toddler_parents':
      return 'Ïú†ÏïÑ Î∂ÄÎ™®'
    case 'all_parents':
      return 'Î™®Îì† Î∂ÄÎ™®'
    default:
      return audience
  }
}